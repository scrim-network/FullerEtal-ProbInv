> set.seed(9);arima.sim(n=5,list(ar=c(.8,.1)),sd=1)                                                                                                
Time Series:
Start = 1 
End = 5 
Frequency = 1 
[1] -0.6882693  0.9307119  1.2218203  2.6354893  2.4802436

> set.seed(9);arima.sim(n=5,sd=1,list(ar=c(.8,.1)))                                                                                                
Time Series:
Start = 1 
End = 5 
Frequency = 1 
[1] -0.6882693  0.9307119  1.2218203  2.6354893  2.4802436


	n = length(r)
	w = r[2:n] - rho1*r[1:(n-1)] # whitened residuals

	sigma.proc = sigma/sqrt(1-rho1^2) # stationary process variance sigma.proc^2


# this is WRONG -- see Nathan's version
noise_ar1 <- function(n, sigma, rho)
{
    n <- n + 1
    wnoise <- rnorm(n, sd=sigma)
    resid  <- wnoise[2:n] + rho * wnoise[1:n-1]
    return (resid)
}

noise_ar1(5, 1, 0.9)



arwhiten <- function(res, rhos)
{
    nres  <- length(res)
    nrhos <- length(rhos)
    w <- res[ (nrhos + 1): nres ]
    for (i in 1:nrhos) {
        w = w - rhos[i] * res [ (nrhos + 1 - i):(nres - i) ]
    }

    return (w)
}


source('assim.R')
system.time(for(i in 1:100000) {arima.sim(n=150,sd=1,list(ar=0.9))} )
system.time(for(i in 1:100000) {noise_ar1(n=150,sigma=1,rho=0.9)} )
