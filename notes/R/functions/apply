implementation:
    tapply calls lapply

    lapply coerces things to be lists, then makes an internal call

    mapply calls a C function, do_mapply

    apply is implemented entirely in R using for (i in...)

    sapply is a "friendly" wrapper for lapply


apply(base)             Apply Functions Over Array Margins

mapply(base)            Apply a function to multiple list or vector
                        arguments
tapply(base)            Apply a Function Over a "Ragged" Array


lapply(base)            Apply a Function over a List or Vector
rapply(base)            Recursively Apply a Function to a List

by(base)                Apply a Function to a Data Frame split by
                        Factors
eapply(base)            Apply a Function over values in an environment

gapply(nlme)            Apply a Function by Groups


foo <- c(1, 2, 3, 4)
dim(foo) <- c(2,2)
foo
     [,1] [,2]
[1,]    1    3
[2,]    2    4

mapply

    mapply(print, foo)         
    [1] 1
    [1] 2
    [1] 3
    [1] 4
    [1] 1 2 3 4

apply

    apply(foo, 1, print)
    [1] 1 3
    [1] 2 4
         [,1] [,2]
    [1,]    1    2
    [2,]    3    4

    apply(foo, 2, print)
    [1] 1 2
    [1] 3 4
         [,1] [,2]
    [1,]    1    3
    [2,]    2    4

    THIS IS WEIRD, note that the order of 1,2 vs. 2,1 changes behavior:

    apply(foo, c(1,2), print)
    [1] 1
    [1] 2
    [1] 3
    [1] 4
         [,1] [,2]
    [1,]    1    3
    [2,]    2    4

    apply(foo, c(2,1), print)
    [1] 1
    [1] 3
    [1] 2
    [1] 4
         [,1] [,2]
    [1,]    1    2
    [2,]    3    4

    ALSO, why does an example use 3 for the second parameter??


foo <- c("sig", "rh1", "rh2", "s0", "a", "b", "tau")

list apply, lapply:

    lapply(foo, get)
    [[1]]
    [1] 0.01703462

    [[2]]
    [1] 0.7287013

    [[3]]
    [1] -0.263041

    [[4]]
    [1] -0.2302343

    [[5]]
    [1] 0.8052046

    [[6]]
    [1] 0.4673803

    [[7]]
    [1] 159.6999

friendly apply, "sapply" returns a vector

    sapply(foo, get)
             sig          rh1          rh2           s0            a            b 
      0.01703462   0.72870125  -0.26304100  -0.23023427   0.80520464   0.46738031 
             tau 
    159.69992687 

    sapply(foo, get, USE.NAMES=FALSE)
    [1]   0.01703462   0.72870125  -0.26304100  -0.23023427   0.80520464
    [6]   0.46738031 159.69992687
