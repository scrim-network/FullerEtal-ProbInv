as.list(match.call())
    first element is function

    others are key/value pairs

    names gives keys

    indexing gives values -- but need to be evaluated, in caller's context
        eval.parent() works for this

sys.call is similar, BUT does no argument matching (i.e. won't add doh name for first parameter)

testing
    foo <- function(doh, dumb=2, ...)
    {
        return(match.call(expand.dots=T))
    }

        > mycall <- foo(5, blowme=6)
        > as.list(mycall)
        [[1]]
        foo

        $doh
        [1] 5

        $blowme
        [1] 6

    with expand.dots=F

        > mycall <- foo(5, blowme=6, dorkme=9)
        > as.list(mycall)
        [[1]]
        foo

        $doh
        [1] 5

        $...
        $...$blowme
        [1] 6

        $...$dorkme
        [1] 9

        > mycall <- foo(5, blowme=dork+7, dorkme=9)
        > as.list(mycall)
        [[1]]
        foo

        $doh
        [1] 5

        $...
        $...$blowme
        dork + 7

        $...$dorkme
        [1] 9

    with expand.dots=T
        > mycall <- foo(5, blowme=dork+7, dorkme=9)
        > as.list(mycall)
        [[1]]
        foo

        $doh
        [1] 5

        $blowme
        dork + 7

        $dorkme
        [1] 9
