findInterval

finds x in v (finds index of the number in v <= x)

v <- seq(2, 10, by= 1.4)
v
[1] 2.0 3.4 4.8 6.2 7.6 9.0

x <- c(3)
f <- findInterval(x, v)
v[f]
[1] 2

x <-c(4)
f <- findInterval(x, v)
v[f]
[1] 3.4

f <- findInterval(10, v, all.inside = TRUE)
v[f]
[1] 7.6

f <- findInterval(1, v, all.inside = TRUE)
v[f]
[1] 2

all.inside = TRUE
    if x is below the interval given by vec, 1 is returned instead of 0 (for the index)

    if x is above the interval given by vec, N-1 is returned instead of N (for the index)
        why would you want this?
            you could set the uppermost to infinity

rightmost.closed = TRUE
    "vec[N] ... vec[N-1] is treated as closed" i.e. treat as ] instead of )
        closed interval:  lbound <  value <  ubound  [lbound, ubound]
        open interval:    lbound <= value <= ubound  (lbound, ubound)

    does what?
        f <- findInterval(9, v, rightmost.closed = TRUE)
        v[f]
        [1] 7.6
        f <- findInterval(9, v, rightmost.closed = FALSE)
        v[f]
        [1] 9

   why only for the rightmost interval?

approx(*, method = "constant") is a generalization of findInterval()
