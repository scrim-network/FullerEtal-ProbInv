read.table()
    foo <- read.table("~/research/slr/brohan/data/www.cru.uea.ac.uk/cru/data/temperature/hadcrut3vgl.txt", fill=TRUE)

        [[column]] [row]

        foo[[1]][1]
            gives first year

        foo[[1]][3]
            gives second year

        foo[[2]][1]
            gives first slr datum

scan()
    bar <- scan("~/research/slr/brohan/data/www.cru.uea.ac.uk/cru/data/temperature/hadcrut3vgl.txt", fill=TRUE, as.list(numeric(14)))
        creates a list with 14 members, each of which is a column;  this is little better than read.table()

    foo <- scan("/nfs/tmp/temps.dat", what=numeric(), quiet=TRUE)
        1850-2300 (451 years)

        dim(foo) <- c(2000,451)
        foo[1,] gives 451 values, but not a row of the file
        foo[,1] gives 2000 values, from rows of file, but not a row of the file

        dim(foo) <- c(451, 2000)
        foo[1,] gives 2000 values
        foo[,1] gives 451 values that are correct!

        summary:
            foo <- scan("/nfs/tmp/temps.dat", what=numeric(), quiet=TRUE)
            dim(foo) <- c(451, 2000)
            bar <- cbind(1850:2300, foo[,1])
            colnames(bar) <- c("time", "temp")
            ar4bias(gmsx=bar, factor=1)$ar4gmsx

equivalents
    gmslRaw <- read.table("~/research/slr/church and white/data/church_white_grl_gmsl.txt")
    gmsl <- as.matrix(gmslRaw)
    #gmsl <- cbind(gmslRaw[[1]], gmslRaw[[2]], gmslRaw[[3]])

    gmslRaw <- scan("~/research/slr/church and white/data/church_white_grl_gmsl.txt", what=numeric(), quiet=T)
    gmsl <- matrix(gmslRaw, ncol=3, byrow=T)

CONCLUSIONS:
    vectors are stored in column major order...  read by scan in row order (sequentially)

    read.table() is better for smaller data sets because it follows columnar format of file
    scan() is required for larger data sets (computationally intensive), but it makes columns from file rows
        however, matrix() can reverse with byrow argument?
