#!/bin/bash
# written by Robert W. Fuller on 100714

# CAUTION: Remove the > /dev/null if you want to check directories

#=============================================
# like basename, but written in bash
bashname() {
    local basename

    if [ $# != 1 ] && [ $# != 2 ]; then
        echo "usage:  ${FUNCNAME} NAME [SUFFIX]"
        return 1
    fi

    basename=${1}

    # remove trailing slashes
    while [ "${basename:(-1)}" = "/" ]; do
        basename=${basename%/}
    done

    # remove all characters before final slash
    basename=${basename##*/}

    # remove suffix if specified
    if [ $# == 2 ]; then

        # do we want shortest or longest match here?
        basename=${basename%%${2}}
    fi

    echo -n ${basename}
}




#========================================
# - Evaluates command CMD
# - After the first call changes CLOBBER to append output files
# - The inside action occurs within local script run subdirectory
# # ARGUMENTS
# ${CMD} - Command to execute (Specified at program end)
# $1 - First argument to command ${CMD} [Currently individual model input file]
# $2 - Second arg to ${CMD} [Currently output file name = model name]
# $3, etc. - Other arguments can be passed
dump_file() {
    eval ${CMD} #Evaluate command

    if [ "${CLOBBER}" = "clobber" ]; then
        CLOBBER=append
    fi
}



#========================================
# - Makes a run directory in the script directory tree and cds there
# - Finds NetCDF paths of files in the IPCC model run subdirectory, sorts them, and dumps the data
#   from each of them into one file using the dump_file command
# - The inside action takes place within the local script run subdirectory
# ARGUMENTS: $1 - Full path of the individual IPCC model run
#            ${MODEL} - basename of the IPCC model
# CALLS:     dump_file
# example:  dump_run ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao/bccr_bcm2_0/run1
dump_run() {
    local dir run file
   
#   Definitions, create a run subdirectory, cd to it
#   (On subsequent calls directory already exists and the mkdir doesn't do anything)
    echo '  ' 'Dumping run: ' $1
    CLOBBER=clobber
    run=$(bashname "${1}")
    pushd . > /dev/null
        mkdir -p "${run}"
        cd "${run}"
      
#       For each argument to the function (for each run subdirectory) do:
#       (Likely equivalent to `for dir in $@`)
        for dir; do

            # List full paths of NetCDF files in the run subdirectory, sort them, and run the dump_file
            # command for each of the files 
            find "${dir}" -name \*.nc -type f | sort \
                | while read file; do dump_file "${file}" "${MODEL}"; done
        done
    popd > /dev/null
}



#=====================================
# - Finds all run directories within the IPCC model directory
# - Calls dump_run with each of the run directories
# - Inside action occurs in script directory /scenario
# ARGUMENTS: $1 - Full path of the individual IPCC Model directory
# example:  dump_runs ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao/bccr_bcm2_0
dump_runs() {
    local dir

#   Retain the basename of the IPCC model directory
    MODEL=$(bashname "${1}")
    echo ''
    echo 'Dumping Model: ' $MODEL


    find "${1}" -mindepth 1 -maxdepth 1 -type d \
        | while read dir; do dump_run "${dir}"; done
}



#===================================
# - Finds all model subdirectories
# - Calls dump_runs with each of the subdirectories
# - Inside action occurs in script directory /scenario
# ARGUMENTS: $1 - Full directory with all model output
# example:  dump_models ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao
dump_models() {
    local dir

    echo 'Dumping individual models from: ' $1

    find "${1}" -mindepth 1 -maxdepth 1 -type d \
        | while read dir; do dump_runs "${dir}"; done
}



#========================================
# - Creates sub-directory of the scenario
# - Calls dump_models
# - Inside action occurs in script directory /scenario
# ARGUMENTS: $1 - Scenario
#            ${MODEL_DIR} - Full dir with all model output. Note that when it is evaluated
#                           by the eval command, "${1}" expands to the Scenario 
# example:  dump_scenario 20c3m
dump_scenario() {
    local outdir cmd

    outdir="${1}"
    pushd . > /dev/null
        mkdir -p "${outdir}"
	echo Created Directory: ${outdir}
        cd "${outdir}"

        cmd=dump_models\ "${MODEL_DIR}"
	echo 'Calling dump models:'
        eval ${cmd}
    popd > /dev/null
}

#========================================
# DEFINITIONS
# single quotes keeps bash from interpreting the parameters
#CMD='ferret -script ocnheat.jnl "${1}" "${2}" "${CLOBBER}" "1" "-65" "0:100@AVE"'
CMD='ferret -script calc_OHC.jnl "${1}" "${2}" "${CLOBBER}"'
#CMD='ferret -script sample.jnl'
MODEL_DIR='~/group/ocean_temp/ftp-esg.ucllnl.org/"${1}"/ocn/mo/thetao'



# RUN THE EXTRACTION
#dump_scenario picntrl
dump_runs ~/group/ocean_temp/ftp-esg.ucllnl.org/picntrl/ocn/mo/thetao/gfdl_cm2_1


# examples:
#MODEL=bccr_bcm2_0
#dump_run ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao/bccr_bcm2_0/run1

#dump_runs ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao/csiro_mk3_0
#dump_models ~/group/ocean_temp/ftp-esg.ucllnl.org/20c3m/ocn/mo/thetao

#dump_scenario 20c3m
#dump_scenario sresa1b